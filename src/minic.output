Grammar

    0 $accept: program $end

    1 program: stmt_list

    2 stmt_list: ε
    3          | stmt stmt_list

    4 stmt: tREAD '(' tIDENTIFIER ')' ';'
    5     | tPRINT '(' exp ')' ';'
    6     | tIDENTIFIER '=' exp ';'
    7     | tWHILE '(' exp ')' '{' stmt_list '}'
    8     | tVAR tIDENTIFIER ':' type '=' exp ';'
    9     | tVAR tIDENTIFIER '=' exp ';'
   10     | if_stmt

   11 if_stmt: tIF '(' exp ')' '{' stmt_list '}'
   12        | tIF '(' exp ')' '{' stmt_list '}' tELSE '{' stmt_list '}'
   13        | tIF '(' exp ')' '{' stmt_list '}' tELSE if_stmt

   14 exp: exp '+' exp
   15    | exp '-' exp
   16    | exp '*' exp
   17    | exp '/' exp
   18    | '(' exp ')'
   19    | '-' exp
   20    | '!' exp
   21    | exp tEQUAL exp
   22    | exp tNEQUAL exp
   23    | exp tGT exp
   24    | exp tGTE exp
   25    | exp tST exp
   26    | exp tSTE exp
   27    | exp tLOGIC_OR exp
   28    | exp tLOGIC_AND exp
   29    | tIDENTIFIER
   30    | tBOOL_LITERAL
   31    | tSTRING_LITERAL
   32    | tINT_LITERAL
   33    | tFLOAT_LITERAL

   34 type: tBOOL
   35     | tSTRING
   36     | tINT
   37     | tFLOAT


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 20
    '(' (40) 4 5 7 11 12 13 18
    ')' (41) 4 5 7 11 12 13 18
    '*' (42) 16
    '+' (43) 14
    '-' (45) 15 19
    '/' (47) 17
    ':' (58) 8
    ';' (59) 4 5 6 8 9
    '=' (61) 6 8 9
    '{' (123) 7 11 12 13
    '}' (125) 7 11 12 13
    error (256)
    tVAR (258) 8 9
    tFLOAT (259) 37
    tINT (260) 36
    tBOOL (261) 34
    tSTRING (262) 35
    tPRINT (263) 5
    tWHILE (264) 7
    tIF (265) 11 12 13
    tELSE (266) 12 13
    tREAD (267) 4
    tGT (268) 23
    tGTE (269) 24
    tST (270) 25
    tSTE (271) 26
    tEQUAL (272) 21
    tLOGIC_AND (273) 28
    tLOGIC_OR (274) 27
    tNEQUAL (275) 22
    tBOOL_LITERAL <bool_val> (276) 30
    tSTRING_LITERAL <string_val> (277) 31
    tINT_LITERAL <int_val> (278) 32
    tFLOAT_LITERAL <float_val> (279) 33
    tIDENTIFIER <string_val> (280) 4 6 8 9 29


Nonterminals, with rules where they appear

    $accept (38)
        on left: 0
    program <stmt_list> (39)
        on left: 1
        on right: 0
    stmt_list <stmt_list> (40)
        on left: 2 3
        on right: 1 3 7 11 12 13
    stmt <stmt> (41)
        on left: 4 5 6 7 8 9 10
        on right: 3
    if_stmt <if_stmt> (42)
        on left: 11 12 13
        on right: 10 13
    exp <exp> (43)
        on left: 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33
        on right: 5 6 7 8 9 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28
    type <type> (44)
        on left: 34 35 36 37
        on right: 8


State 0

    0 $accept: • program $end

    tVAR         shift, and go to state 1
    tPRINT       shift, and go to state 2
    tWHILE       shift, and go to state 3
    tIF          shift, and go to state 4
    tREAD        shift, and go to state 5
    tIDENTIFIER  shift, and go to state 6

    $default  reduce using rule 2 (stmt_list)

    program    go to state 7
    stmt_list  go to state 8
    stmt       go to state 9
    if_stmt    go to state 10


State 1

    8 stmt: tVAR • tIDENTIFIER ':' type '=' exp ';'
    9     | tVAR • tIDENTIFIER '=' exp ';'

    tIDENTIFIER  shift, and go to state 11


State 2

    5 stmt: tPRINT • '(' exp ')' ';'

    '('  shift, and go to state 12


State 3

    7 stmt: tWHILE • '(' exp ')' '{' stmt_list '}'

    '('  shift, and go to state 13


State 4

   11 if_stmt: tIF • '(' exp ')' '{' stmt_list '}'
   12        | tIF • '(' exp ')' '{' stmt_list '}' tELSE '{' stmt_list '}'
   13        | tIF • '(' exp ')' '{' stmt_list '}' tELSE if_stmt

    '('  shift, and go to state 14


State 5

    4 stmt: tREAD • '(' tIDENTIFIER ')' ';'

    '('  shift, and go to state 15


State 6

    6 stmt: tIDENTIFIER • '=' exp ';'

    '='  shift, and go to state 16


State 7

    0 $accept: program • $end

    $end  shift, and go to state 17


State 8

    1 program: stmt_list •

    $default  reduce using rule 1 (program)


State 9

    3 stmt_list: stmt • stmt_list

    tVAR         shift, and go to state 1
    tPRINT       shift, and go to state 2
    tWHILE       shift, and go to state 3
    tIF          shift, and go to state 4
    tREAD        shift, and go to state 5
    tIDENTIFIER  shift, and go to state 6

    $default  reduce using rule 2 (stmt_list)

    stmt_list  go to state 18
    stmt       go to state 9
    if_stmt    go to state 10


State 10

   10 stmt: if_stmt •

    $default  reduce using rule 10 (stmt)


State 11

    8 stmt: tVAR tIDENTIFIER • ':' type '=' exp ';'
    9     | tVAR tIDENTIFIER • '=' exp ';'

    '='  shift, and go to state 19
    ':'  shift, and go to state 20


State 12

    5 stmt: tPRINT '(' • exp ')' ';'

    tBOOL_LITERAL    shift, and go to state 21
    tSTRING_LITERAL  shift, and go to state 22
    tINT_LITERAL     shift, and go to state 23
    tFLOAT_LITERAL   shift, and go to state 24
    tIDENTIFIER      shift, and go to state 25
    '-'              shift, and go to state 26
    '!'              shift, and go to state 27
    '('              shift, and go to state 28

    exp  go to state 29


State 13

    7 stmt: tWHILE '(' • exp ')' '{' stmt_list '}'

    tBOOL_LITERAL    shift, and go to state 21
    tSTRING_LITERAL  shift, and go to state 22
    tINT_LITERAL     shift, and go to state 23
    tFLOAT_LITERAL   shift, and go to state 24
    tIDENTIFIER      shift, and go to state 25
    '-'              shift, and go to state 26
    '!'              shift, and go to state 27
    '('              shift, and go to state 28

    exp  go to state 30


State 14

   11 if_stmt: tIF '(' • exp ')' '{' stmt_list '}'
   12        | tIF '(' • exp ')' '{' stmt_list '}' tELSE '{' stmt_list '}'
   13        | tIF '(' • exp ')' '{' stmt_list '}' tELSE if_stmt

    tBOOL_LITERAL    shift, and go to state 21
    tSTRING_LITERAL  shift, and go to state 22
    tINT_LITERAL     shift, and go to state 23
    tFLOAT_LITERAL   shift, and go to state 24
    tIDENTIFIER      shift, and go to state 25
    '-'              shift, and go to state 26
    '!'              shift, and go to state 27
    '('              shift, and go to state 28

    exp  go to state 31


State 15

    4 stmt: tREAD '(' • tIDENTIFIER ')' ';'

    tIDENTIFIER  shift, and go to state 32


State 16

    6 stmt: tIDENTIFIER '=' • exp ';'

    tBOOL_LITERAL    shift, and go to state 21
    tSTRING_LITERAL  shift, and go to state 22
    tINT_LITERAL     shift, and go to state 23
    tFLOAT_LITERAL   shift, and go to state 24
    tIDENTIFIER      shift, and go to state 25
    '-'              shift, and go to state 26
    '!'              shift, and go to state 27
    '('              shift, and go to state 28

    exp  go to state 33


State 17

    0 $accept: program $end •

    $default  accept


State 18

    3 stmt_list: stmt stmt_list •

    $default  reduce using rule 3 (stmt_list)


State 19

    9 stmt: tVAR tIDENTIFIER '=' • exp ';'

    tBOOL_LITERAL    shift, and go to state 21
    tSTRING_LITERAL  shift, and go to state 22
    tINT_LITERAL     shift, and go to state 23
    tFLOAT_LITERAL   shift, and go to state 24
    tIDENTIFIER      shift, and go to state 25
    '-'              shift, and go to state 26
    '!'              shift, and go to state 27
    '('              shift, and go to state 28

    exp  go to state 34


State 20

    8 stmt: tVAR tIDENTIFIER ':' • type '=' exp ';'

    tFLOAT   shift, and go to state 35
    tINT     shift, and go to state 36
    tBOOL    shift, and go to state 37
    tSTRING  shift, and go to state 38

    type  go to state 39


State 21

   30 exp: tBOOL_LITERAL •

    $default  reduce using rule 30 (exp)


State 22

   31 exp: tSTRING_LITERAL •

    $default  reduce using rule 31 (exp)


State 23

   32 exp: tINT_LITERAL •

    $default  reduce using rule 32 (exp)


State 24

   33 exp: tFLOAT_LITERAL •

    $default  reduce using rule 33 (exp)


State 25

   29 exp: tIDENTIFIER •

    $default  reduce using rule 29 (exp)


State 26

   19 exp: '-' • exp

    tBOOL_LITERAL    shift, and go to state 21
    tSTRING_LITERAL  shift, and go to state 22
    tINT_LITERAL     shift, and go to state 23
    tFLOAT_LITERAL   shift, and go to state 24
    tIDENTIFIER      shift, and go to state 25
    '-'              shift, and go to state 26
    '!'              shift, and go to state 27
    '('              shift, and go to state 28

    exp  go to state 40


State 27

   20 exp: '!' • exp

    tBOOL_LITERAL    shift, and go to state 21
    tSTRING_LITERAL  shift, and go to state 22
    tINT_LITERAL     shift, and go to state 23
    tFLOAT_LITERAL   shift, and go to state 24
    tIDENTIFIER      shift, and go to state 25
    '-'              shift, and go to state 26
    '!'              shift, and go to state 27
    '('              shift, and go to state 28

    exp  go to state 41


State 28

   18 exp: '(' • exp ')'

    tBOOL_LITERAL    shift, and go to state 21
    tSTRING_LITERAL  shift, and go to state 22
    tINT_LITERAL     shift, and go to state 23
    tFLOAT_LITERAL   shift, and go to state 24
    tIDENTIFIER      shift, and go to state 25
    '-'              shift, and go to state 26
    '!'              shift, and go to state 27
    '('              shift, and go to state 28

    exp  go to state 42


State 29

    5 stmt: tPRINT '(' exp • ')' ';'
   14 exp: exp • '+' exp
   15    | exp • '-' exp
   16    | exp • '*' exp
   17    | exp • '/' exp
   21    | exp • tEQUAL exp
   22    | exp • tNEQUAL exp
   23    | exp • tGT exp
   24    | exp • tGTE exp
   25    | exp • tST exp
   26    | exp • tSTE exp
   27    | exp • tLOGIC_OR exp
   28    | exp • tLOGIC_AND exp

    tGT         shift, and go to state 43
    tGTE        shift, and go to state 44
    tST         shift, and go to state 45
    tSTE        shift, and go to state 46
    tEQUAL      shift, and go to state 47
    tLOGIC_AND  shift, and go to state 48
    tLOGIC_OR   shift, and go to state 49
    tNEQUAL     shift, and go to state 50
    '+'         shift, and go to state 51
    '-'         shift, and go to state 52
    '*'         shift, and go to state 53
    '/'         shift, and go to state 54
    ')'         shift, and go to state 55


State 30

    7 stmt: tWHILE '(' exp • ')' '{' stmt_list '}'
   14 exp: exp • '+' exp
   15    | exp • '-' exp
   16    | exp • '*' exp
   17    | exp • '/' exp
   21    | exp • tEQUAL exp
   22    | exp • tNEQUAL exp
   23    | exp • tGT exp
   24    | exp • tGTE exp
   25    | exp • tST exp
   26    | exp • tSTE exp
   27    | exp • tLOGIC_OR exp
   28    | exp • tLOGIC_AND exp

    tGT         shift, and go to state 43
    tGTE        shift, and go to state 44
    tST         shift, and go to state 45
    tSTE        shift, and go to state 46
    tEQUAL      shift, and go to state 47
    tLOGIC_AND  shift, and go to state 48
    tLOGIC_OR   shift, and go to state 49
    tNEQUAL     shift, and go to state 50
    '+'         shift, and go to state 51
    '-'         shift, and go to state 52
    '*'         shift, and go to state 53
    '/'         shift, and go to state 54
    ')'         shift, and go to state 56


State 31

   11 if_stmt: tIF '(' exp • ')' '{' stmt_list '}'
   12        | tIF '(' exp • ')' '{' stmt_list '}' tELSE '{' stmt_list '}'
   13        | tIF '(' exp • ')' '{' stmt_list '}' tELSE if_stmt
   14 exp: exp • '+' exp
   15    | exp • '-' exp
   16    | exp • '*' exp
   17    | exp • '/' exp
   21    | exp • tEQUAL exp
   22    | exp • tNEQUAL exp
   23    | exp • tGT exp
   24    | exp • tGTE exp
   25    | exp • tST exp
   26    | exp • tSTE exp
   27    | exp • tLOGIC_OR exp
   28    | exp • tLOGIC_AND exp

    tGT         shift, and go to state 43
    tGTE        shift, and go to state 44
    tST         shift, and go to state 45
    tSTE        shift, and go to state 46
    tEQUAL      shift, and go to state 47
    tLOGIC_AND  shift, and go to state 48
    tLOGIC_OR   shift, and go to state 49
    tNEQUAL     shift, and go to state 50
    '+'         shift, and go to state 51
    '-'         shift, and go to state 52
    '*'         shift, and go to state 53
    '/'         shift, and go to state 54
    ')'         shift, and go to state 57


State 32

    4 stmt: tREAD '(' tIDENTIFIER • ')' ';'

    ')'  shift, and go to state 58


State 33

    6 stmt: tIDENTIFIER '=' exp • ';'
   14 exp: exp • '+' exp
   15    | exp • '-' exp
   16    | exp • '*' exp
   17    | exp • '/' exp
   21    | exp • tEQUAL exp
   22    | exp • tNEQUAL exp
   23    | exp • tGT exp
   24    | exp • tGTE exp
   25    | exp • tST exp
   26    | exp • tSTE exp
   27    | exp • tLOGIC_OR exp
   28    | exp • tLOGIC_AND exp

    tGT         shift, and go to state 43
    tGTE        shift, and go to state 44
    tST         shift, and go to state 45
    tSTE        shift, and go to state 46
    tEQUAL      shift, and go to state 47
    tLOGIC_AND  shift, and go to state 48
    tLOGIC_OR   shift, and go to state 49
    tNEQUAL     shift, and go to state 50
    '+'         shift, and go to state 51
    '-'         shift, and go to state 52
    '*'         shift, and go to state 53
    '/'         shift, and go to state 54
    ';'         shift, and go to state 59


State 34

    9 stmt: tVAR tIDENTIFIER '=' exp • ';'
   14 exp: exp • '+' exp
   15    | exp • '-' exp
   16    | exp • '*' exp
   17    | exp • '/' exp
   21    | exp • tEQUAL exp
   22    | exp • tNEQUAL exp
   23    | exp • tGT exp
   24    | exp • tGTE exp
   25    | exp • tST exp
   26    | exp • tSTE exp
   27    | exp • tLOGIC_OR exp
   28    | exp • tLOGIC_AND exp

    tGT         shift, and go to state 43
    tGTE        shift, and go to state 44
    tST         shift, and go to state 45
    tSTE        shift, and go to state 46
    tEQUAL      shift, and go to state 47
    tLOGIC_AND  shift, and go to state 48
    tLOGIC_OR   shift, and go to state 49
    tNEQUAL     shift, and go to state 50
    '+'         shift, and go to state 51
    '-'         shift, and go to state 52
    '*'         shift, and go to state 53
    '/'         shift, and go to state 54
    ';'         shift, and go to state 60


State 35

   37 type: tFLOAT •

    $default  reduce using rule 37 (type)


State 36

   36 type: tINT •

    $default  reduce using rule 36 (type)


State 37

   34 type: tBOOL •

    $default  reduce using rule 34 (type)


State 38

   35 type: tSTRING •

    $default  reduce using rule 35 (type)


State 39

    8 stmt: tVAR tIDENTIFIER ':' type • '=' exp ';'

    '='  shift, and go to state 61


State 40

   14 exp: exp • '+' exp
   15    | exp • '-' exp
   16    | exp • '*' exp
   17    | exp • '/' exp
   19    | '-' exp •
   21    | exp • tEQUAL exp
   22    | exp • tNEQUAL exp
   23    | exp • tGT exp
   24    | exp • tGTE exp
   25    | exp • tST exp
   26    | exp • tSTE exp
   27    | exp • tLOGIC_OR exp
   28    | exp • tLOGIC_AND exp

    '*'  shift, and go to state 53
    '/'  shift, and go to state 54

    $default  reduce using rule 19 (exp)


State 41

   14 exp: exp • '+' exp
   15    | exp • '-' exp
   16    | exp • '*' exp
   17    | exp • '/' exp
   20    | '!' exp •
   21    | exp • tEQUAL exp
   22    | exp • tNEQUAL exp
   23    | exp • tGT exp
   24    | exp • tGTE exp
   25    | exp • tST exp
   26    | exp • tSTE exp
   27    | exp • tLOGIC_OR exp
   28    | exp • tLOGIC_AND exp

    $default  reduce using rule 20 (exp)


State 42

   14 exp: exp • '+' exp
   15    | exp • '-' exp
   16    | exp • '*' exp
   17    | exp • '/' exp
   18    | '(' exp • ')'
   21    | exp • tEQUAL exp
   22    | exp • tNEQUAL exp
   23    | exp • tGT exp
   24    | exp • tGTE exp
   25    | exp • tST exp
   26    | exp • tSTE exp
   27    | exp • tLOGIC_OR exp
   28    | exp • tLOGIC_AND exp

    tGT         shift, and go to state 43
    tGTE        shift, and go to state 44
    tST         shift, and go to state 45
    tSTE        shift, and go to state 46
    tEQUAL      shift, and go to state 47
    tLOGIC_AND  shift, and go to state 48
    tLOGIC_OR   shift, and go to state 49
    tNEQUAL     shift, and go to state 50
    '+'         shift, and go to state 51
    '-'         shift, and go to state 52
    '*'         shift, and go to state 53
    '/'         shift, and go to state 54
    ')'         shift, and go to state 62


State 43

   23 exp: exp tGT • exp

    tBOOL_LITERAL    shift, and go to state 21
    tSTRING_LITERAL  shift, and go to state 22
    tINT_LITERAL     shift, and go to state 23
    tFLOAT_LITERAL   shift, and go to state 24
    tIDENTIFIER      shift, and go to state 25
    '-'              shift, and go to state 26
    '!'              shift, and go to state 27
    '('              shift, and go to state 28

    exp  go to state 63


State 44

   24 exp: exp tGTE • exp

    tBOOL_LITERAL    shift, and go to state 21
    tSTRING_LITERAL  shift, and go to state 22
    tINT_LITERAL     shift, and go to state 23
    tFLOAT_LITERAL   shift, and go to state 24
    tIDENTIFIER      shift, and go to state 25
    '-'              shift, and go to state 26
    '!'              shift, and go to state 27
    '('              shift, and go to state 28

    exp  go to state 64


State 45

   25 exp: exp tST • exp

    tBOOL_LITERAL    shift, and go to state 21
    tSTRING_LITERAL  shift, and go to state 22
    tINT_LITERAL     shift, and go to state 23
    tFLOAT_LITERAL   shift, and go to state 24
    tIDENTIFIER      shift, and go to state 25
    '-'              shift, and go to state 26
    '!'              shift, and go to state 27
    '('              shift, and go to state 28

    exp  go to state 65


State 46

   26 exp: exp tSTE • exp

    tBOOL_LITERAL    shift, and go to state 21
    tSTRING_LITERAL  shift, and go to state 22
    tINT_LITERAL     shift, and go to state 23
    tFLOAT_LITERAL   shift, and go to state 24
    tIDENTIFIER      shift, and go to state 25
    '-'              shift, and go to state 26
    '!'              shift, and go to state 27
    '('              shift, and go to state 28

    exp  go to state 66


State 47

   21 exp: exp tEQUAL • exp

    tBOOL_LITERAL    shift, and go to state 21
    tSTRING_LITERAL  shift, and go to state 22
    tINT_LITERAL     shift, and go to state 23
    tFLOAT_LITERAL   shift, and go to state 24
    tIDENTIFIER      shift, and go to state 25
    '-'              shift, and go to state 26
    '!'              shift, and go to state 27
    '('              shift, and go to state 28

    exp  go to state 67


State 48

   28 exp: exp tLOGIC_AND • exp

    tBOOL_LITERAL    shift, and go to state 21
    tSTRING_LITERAL  shift, and go to state 22
    tINT_LITERAL     shift, and go to state 23
    tFLOAT_LITERAL   shift, and go to state 24
    tIDENTIFIER      shift, and go to state 25
    '-'              shift, and go to state 26
    '!'              shift, and go to state 27
    '('              shift, and go to state 28

    exp  go to state 68


State 49

   27 exp: exp tLOGIC_OR • exp

    tBOOL_LITERAL    shift, and go to state 21
    tSTRING_LITERAL  shift, and go to state 22
    tINT_LITERAL     shift, and go to state 23
    tFLOAT_LITERAL   shift, and go to state 24
    tIDENTIFIER      shift, and go to state 25
    '-'              shift, and go to state 26
    '!'              shift, and go to state 27
    '('              shift, and go to state 28

    exp  go to state 69


State 50

   22 exp: exp tNEQUAL • exp

    tBOOL_LITERAL    shift, and go to state 21
    tSTRING_LITERAL  shift, and go to state 22
    tINT_LITERAL     shift, and go to state 23
    tFLOAT_LITERAL   shift, and go to state 24
    tIDENTIFIER      shift, and go to state 25
    '-'              shift, and go to state 26
    '!'              shift, and go to state 27
    '('              shift, and go to state 28

    exp  go to state 70


State 51

   14 exp: exp '+' • exp

    tBOOL_LITERAL    shift, and go to state 21
    tSTRING_LITERAL  shift, and go to state 22
    tINT_LITERAL     shift, and go to state 23
    tFLOAT_LITERAL   shift, and go to state 24
    tIDENTIFIER      shift, and go to state 25
    '-'              shift, and go to state 26
    '!'              shift, and go to state 27
    '('              shift, and go to state 28

    exp  go to state 71


State 52

   15 exp: exp '-' • exp

    tBOOL_LITERAL    shift, and go to state 21
    tSTRING_LITERAL  shift, and go to state 22
    tINT_LITERAL     shift, and go to state 23
    tFLOAT_LITERAL   shift, and go to state 24
    tIDENTIFIER      shift, and go to state 25
    '-'              shift, and go to state 26
    '!'              shift, and go to state 27
    '('              shift, and go to state 28

    exp  go to state 72


State 53

   16 exp: exp '*' • exp

    tBOOL_LITERAL    shift, and go to state 21
    tSTRING_LITERAL  shift, and go to state 22
    tINT_LITERAL     shift, and go to state 23
    tFLOAT_LITERAL   shift, and go to state 24
    tIDENTIFIER      shift, and go to state 25
    '-'              shift, and go to state 26
    '!'              shift, and go to state 27
    '('              shift, and go to state 28

    exp  go to state 73


State 54

   17 exp: exp '/' • exp

    tBOOL_LITERAL    shift, and go to state 21
    tSTRING_LITERAL  shift, and go to state 22
    tINT_LITERAL     shift, and go to state 23
    tFLOAT_LITERAL   shift, and go to state 24
    tIDENTIFIER      shift, and go to state 25
    '-'              shift, and go to state 26
    '!'              shift, and go to state 27
    '('              shift, and go to state 28

    exp  go to state 74


State 55

    5 stmt: tPRINT '(' exp ')' • ';'

    ';'  shift, and go to state 75


State 56

    7 stmt: tWHILE '(' exp ')' • '{' stmt_list '}'

    '{'  shift, and go to state 76


State 57

   11 if_stmt: tIF '(' exp ')' • '{' stmt_list '}'
   12        | tIF '(' exp ')' • '{' stmt_list '}' tELSE '{' stmt_list '}'
   13        | tIF '(' exp ')' • '{' stmt_list '}' tELSE if_stmt

    '{'  shift, and go to state 77


State 58

    4 stmt: tREAD '(' tIDENTIFIER ')' • ';'

    ';'  shift, and go to state 78


State 59

    6 stmt: tIDENTIFIER '=' exp ';' •

    $default  reduce using rule 6 (stmt)


State 60

    9 stmt: tVAR tIDENTIFIER '=' exp ';' •

    $default  reduce using rule 9 (stmt)


State 61

    8 stmt: tVAR tIDENTIFIER ':' type '=' • exp ';'

    tBOOL_LITERAL    shift, and go to state 21
    tSTRING_LITERAL  shift, and go to state 22
    tINT_LITERAL     shift, and go to state 23
    tFLOAT_LITERAL   shift, and go to state 24
    tIDENTIFIER      shift, and go to state 25
    '-'              shift, and go to state 26
    '!'              shift, and go to state 27
    '('              shift, and go to state 28

    exp  go to state 79


State 62

   18 exp: '(' exp ')' •

    $default  reduce using rule 18 (exp)


State 63

   14 exp: exp • '+' exp
   15    | exp • '-' exp
   16    | exp • '*' exp
   17    | exp • '/' exp
   21    | exp • tEQUAL exp
   22    | exp • tNEQUAL exp
   23    | exp • tGT exp
   23    | exp tGT exp •
   24    | exp • tGTE exp
   25    | exp • tST exp
   26    | exp • tSTE exp
   27    | exp • tLOGIC_OR exp
   28    | exp • tLOGIC_AND exp

    '+'  shift, and go to state 51
    '-'  shift, and go to state 52
    '*'  shift, and go to state 53
    '/'  shift, and go to state 54

    $default  reduce using rule 23 (exp)


State 64

   14 exp: exp • '+' exp
   15    | exp • '-' exp
   16    | exp • '*' exp
   17    | exp • '/' exp
   21    | exp • tEQUAL exp
   22    | exp • tNEQUAL exp
   23    | exp • tGT exp
   24    | exp • tGTE exp
   24    | exp tGTE exp •
   25    | exp • tST exp
   26    | exp • tSTE exp
   27    | exp • tLOGIC_OR exp
   28    | exp • tLOGIC_AND exp

    '+'  shift, and go to state 51
    '-'  shift, and go to state 52
    '*'  shift, and go to state 53
    '/'  shift, and go to state 54

    $default  reduce using rule 24 (exp)


State 65

   14 exp: exp • '+' exp
   15    | exp • '-' exp
   16    | exp • '*' exp
   17    | exp • '/' exp
   21    | exp • tEQUAL exp
   22    | exp • tNEQUAL exp
   23    | exp • tGT exp
   24    | exp • tGTE exp
   25    | exp • tST exp
   25    | exp tST exp •
   26    | exp • tSTE exp
   27    | exp • tLOGIC_OR exp
   28    | exp • tLOGIC_AND exp

    '+'  shift, and go to state 51
    '-'  shift, and go to state 52
    '*'  shift, and go to state 53
    '/'  shift, and go to state 54

    $default  reduce using rule 25 (exp)


State 66

   14 exp: exp • '+' exp
   15    | exp • '-' exp
   16    | exp • '*' exp
   17    | exp • '/' exp
   21    | exp • tEQUAL exp
   22    | exp • tNEQUAL exp
   23    | exp • tGT exp
   24    | exp • tGTE exp
   25    | exp • tST exp
   26    | exp • tSTE exp
   26    | exp tSTE exp •
   27    | exp • tLOGIC_OR exp
   28    | exp • tLOGIC_AND exp

    '+'  shift, and go to state 51
    '-'  shift, and go to state 52
    '*'  shift, and go to state 53
    '/'  shift, and go to state 54

    $default  reduce using rule 26 (exp)


State 67

   14 exp: exp • '+' exp
   15    | exp • '-' exp
   16    | exp • '*' exp
   17    | exp • '/' exp
   21    | exp • tEQUAL exp
   21    | exp tEQUAL exp •
   22    | exp • tNEQUAL exp
   23    | exp • tGT exp
   24    | exp • tGTE exp
   25    | exp • tST exp
   26    | exp • tSTE exp
   27    | exp • tLOGIC_OR exp
   28    | exp • tLOGIC_AND exp

    tGT   shift, and go to state 43
    tGTE  shift, and go to state 44
    tST   shift, and go to state 45
    tSTE  shift, and go to state 46
    '+'   shift, and go to state 51
    '-'   shift, and go to state 52
    '*'   shift, and go to state 53
    '/'   shift, and go to state 54

    $default  reduce using rule 21 (exp)


State 68

   14 exp: exp • '+' exp
   15    | exp • '-' exp
   16    | exp • '*' exp
   17    | exp • '/' exp
   21    | exp • tEQUAL exp
   22    | exp • tNEQUAL exp
   23    | exp • tGT exp
   24    | exp • tGTE exp
   25    | exp • tST exp
   26    | exp • tSTE exp
   27    | exp • tLOGIC_OR exp
   28    | exp • tLOGIC_AND exp
   28    | exp tLOGIC_AND exp •

    tGT      shift, and go to state 43
    tGTE     shift, and go to state 44
    tST      shift, and go to state 45
    tSTE     shift, and go to state 46
    tEQUAL   shift, and go to state 47
    tNEQUAL  shift, and go to state 50
    '+'      shift, and go to state 51
    '-'      shift, and go to state 52
    '*'      shift, and go to state 53
    '/'      shift, and go to state 54

    $default  reduce using rule 28 (exp)


State 69

   14 exp: exp • '+' exp
   15    | exp • '-' exp
   16    | exp • '*' exp
   17    | exp • '/' exp
   21    | exp • tEQUAL exp
   22    | exp • tNEQUAL exp
   23    | exp • tGT exp
   24    | exp • tGTE exp
   25    | exp • tST exp
   26    | exp • tSTE exp
   27    | exp • tLOGIC_OR exp
   27    | exp tLOGIC_OR exp •
   28    | exp • tLOGIC_AND exp

    tGT         shift, and go to state 43
    tGTE        shift, and go to state 44
    tST         shift, and go to state 45
    tSTE        shift, and go to state 46
    tEQUAL      shift, and go to state 47
    tLOGIC_AND  shift, and go to state 48
    tNEQUAL     shift, and go to state 50
    '+'         shift, and go to state 51
    '-'         shift, and go to state 52
    '*'         shift, and go to state 53
    '/'         shift, and go to state 54

    $default  reduce using rule 27 (exp)


State 70

   14 exp: exp • '+' exp
   15    | exp • '-' exp
   16    | exp • '*' exp
   17    | exp • '/' exp
   21    | exp • tEQUAL exp
   22    | exp • tNEQUAL exp
   22    | exp tNEQUAL exp •
   23    | exp • tGT exp
   24    | exp • tGTE exp
   25    | exp • tST exp
   26    | exp • tSTE exp
   27    | exp • tLOGIC_OR exp
   28    | exp • tLOGIC_AND exp

    tGT   shift, and go to state 43
    tGTE  shift, and go to state 44
    tST   shift, and go to state 45
    tSTE  shift, and go to state 46
    '+'   shift, and go to state 51
    '-'   shift, and go to state 52
    '*'   shift, and go to state 53
    '/'   shift, and go to state 54

    $default  reduce using rule 22 (exp)


State 71

   14 exp: exp • '+' exp
   14    | exp '+' exp •
   15    | exp • '-' exp
   16    | exp • '*' exp
   17    | exp • '/' exp
   21    | exp • tEQUAL exp
   22    | exp • tNEQUAL exp
   23    | exp • tGT exp
   24    | exp • tGTE exp
   25    | exp • tST exp
   26    | exp • tSTE exp
   27    | exp • tLOGIC_OR exp
   28    | exp • tLOGIC_AND exp

    '*'  shift, and go to state 53
    '/'  shift, and go to state 54

    $default  reduce using rule 14 (exp)


State 72

   14 exp: exp • '+' exp
   15    | exp • '-' exp
   15    | exp '-' exp •
   16    | exp • '*' exp
   17    | exp • '/' exp
   21    | exp • tEQUAL exp
   22    | exp • tNEQUAL exp
   23    | exp • tGT exp
   24    | exp • tGTE exp
   25    | exp • tST exp
   26    | exp • tSTE exp
   27    | exp • tLOGIC_OR exp
   28    | exp • tLOGIC_AND exp

    '*'  shift, and go to state 53
    '/'  shift, and go to state 54

    $default  reduce using rule 15 (exp)


State 73

   14 exp: exp • '+' exp
   15    | exp • '-' exp
   16    | exp • '*' exp
   16    | exp '*' exp •
   17    | exp • '/' exp
   21    | exp • tEQUAL exp
   22    | exp • tNEQUAL exp
   23    | exp • tGT exp
   24    | exp • tGTE exp
   25    | exp • tST exp
   26    | exp • tSTE exp
   27    | exp • tLOGIC_OR exp
   28    | exp • tLOGIC_AND exp

    $default  reduce using rule 16 (exp)


State 74

   14 exp: exp • '+' exp
   15    | exp • '-' exp
   16    | exp • '*' exp
   17    | exp • '/' exp
   17    | exp '/' exp •
   21    | exp • tEQUAL exp
   22    | exp • tNEQUAL exp
   23    | exp • tGT exp
   24    | exp • tGTE exp
   25    | exp • tST exp
   26    | exp • tSTE exp
   27    | exp • tLOGIC_OR exp
   28    | exp • tLOGIC_AND exp

    $default  reduce using rule 17 (exp)


State 75

    5 stmt: tPRINT '(' exp ')' ';' •

    $default  reduce using rule 5 (stmt)


State 76

    7 stmt: tWHILE '(' exp ')' '{' • stmt_list '}'

    tVAR         shift, and go to state 1
    tPRINT       shift, and go to state 2
    tWHILE       shift, and go to state 3
    tIF          shift, and go to state 4
    tREAD        shift, and go to state 5
    tIDENTIFIER  shift, and go to state 6

    $default  reduce using rule 2 (stmt_list)

    stmt_list  go to state 80
    stmt       go to state 9
    if_stmt    go to state 10


State 77

   11 if_stmt: tIF '(' exp ')' '{' • stmt_list '}'
   12        | tIF '(' exp ')' '{' • stmt_list '}' tELSE '{' stmt_list '}'
   13        | tIF '(' exp ')' '{' • stmt_list '}' tELSE if_stmt

    tVAR         shift, and go to state 1
    tPRINT       shift, and go to state 2
    tWHILE       shift, and go to state 3
    tIF          shift, and go to state 4
    tREAD        shift, and go to state 5
    tIDENTIFIER  shift, and go to state 6

    $default  reduce using rule 2 (stmt_list)

    stmt_list  go to state 81
    stmt       go to state 9
    if_stmt    go to state 10


State 78

    4 stmt: tREAD '(' tIDENTIFIER ')' ';' •

    $default  reduce using rule 4 (stmt)


State 79

    8 stmt: tVAR tIDENTIFIER ':' type '=' exp • ';'
   14 exp: exp • '+' exp
   15    | exp • '-' exp
   16    | exp • '*' exp
   17    | exp • '/' exp
   21    | exp • tEQUAL exp
   22    | exp • tNEQUAL exp
   23    | exp • tGT exp
   24    | exp • tGTE exp
   25    | exp • tST exp
   26    | exp • tSTE exp
   27    | exp • tLOGIC_OR exp
   28    | exp • tLOGIC_AND exp

    tGT         shift, and go to state 43
    tGTE        shift, and go to state 44
    tST         shift, and go to state 45
    tSTE        shift, and go to state 46
    tEQUAL      shift, and go to state 47
    tLOGIC_AND  shift, and go to state 48
    tLOGIC_OR   shift, and go to state 49
    tNEQUAL     shift, and go to state 50
    '+'         shift, and go to state 51
    '-'         shift, and go to state 52
    '*'         shift, and go to state 53
    '/'         shift, and go to state 54
    ';'         shift, and go to state 82


State 80

    7 stmt: tWHILE '(' exp ')' '{' stmt_list • '}'

    '}'  shift, and go to state 83


State 81

   11 if_stmt: tIF '(' exp ')' '{' stmt_list • '}'
   12        | tIF '(' exp ')' '{' stmt_list • '}' tELSE '{' stmt_list '}'
   13        | tIF '(' exp ')' '{' stmt_list • '}' tELSE if_stmt

    '}'  shift, and go to state 84


State 82

    8 stmt: tVAR tIDENTIFIER ':' type '=' exp ';' •

    $default  reduce using rule 8 (stmt)


State 83

    7 stmt: tWHILE '(' exp ')' '{' stmt_list '}' •

    $default  reduce using rule 7 (stmt)


State 84

   11 if_stmt: tIF '(' exp ')' '{' stmt_list '}' •
   12        | tIF '(' exp ')' '{' stmt_list '}' • tELSE '{' stmt_list '}'
   13        | tIF '(' exp ')' '{' stmt_list '}' • tELSE if_stmt

    tELSE  shift, and go to state 85

    $default  reduce using rule 11 (if_stmt)


State 85

   12 if_stmt: tIF '(' exp ')' '{' stmt_list '}' tELSE • '{' stmt_list '}'
   13        | tIF '(' exp ')' '{' stmt_list '}' tELSE • if_stmt

    tIF  shift, and go to state 4
    '{'  shift, and go to state 86

    if_stmt  go to state 87


State 86

   12 if_stmt: tIF '(' exp ')' '{' stmt_list '}' tELSE '{' • stmt_list '}'

    tVAR         shift, and go to state 1
    tPRINT       shift, and go to state 2
    tWHILE       shift, and go to state 3
    tIF          shift, and go to state 4
    tREAD        shift, and go to state 5
    tIDENTIFIER  shift, and go to state 6

    $default  reduce using rule 2 (stmt_list)

    stmt_list  go to state 88
    stmt       go to state 9
    if_stmt    go to state 10


State 87

   13 if_stmt: tIF '(' exp ')' '{' stmt_list '}' tELSE if_stmt •

    $default  reduce using rule 13 (if_stmt)


State 88

   12 if_stmt: tIF '(' exp ')' '{' stmt_list '}' tELSE '{' stmt_list • '}'

    '}'  shift, and go to state 89


State 89

   12 if_stmt: tIF '(' exp ')' '{' stmt_list '}' tELSE '{' stmt_list '}' •

    $default  reduce using rule 12 (if_stmt)
